import java.util.regex.Pattern

apply plugin: 'com.android.application'

ext.versionPatch = project.hasProperty('patch') ? project.getProperty('patch') : versionPatch

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "berlin.weconnect.weconnect"
        minSdkVersion 17
        targetSdkVersion 23
        versionCode versionPatch as Integer ?: 0
        versionName versionMajor + "." + versionMinor + "." + versionPatch
    }

    signingConfigs {
        release {
            if (System.getenv("KEYSTORE") != null)
                storeFile file(System.getenv("KEYSTORE"))
            if (System.getenv("KEYSTORE_PASSWORD") != null)
                storePassword System.getenv("KEYSTORE_PASSWORD")
            if (System.getenv("KEY_ALIAS") != null)
                keyAlias System.getenv("KEY_ALIAS")
            if (System.getenv("KEY_PASSWORD") != null)
                keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }

        debug {
            // versionNameSuffix ".debug"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }


    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

def version = versionMajor + '.' + versionMinor + '.' + versionPatch
def apkName = 'app-release'

// --------------------
// Properties injection
// --------------------

task copyPropertiesDebug(type: Copy, dependsOn: "injectProperties") {
    from '../gradle.properties'
    into 'src/main/assets'
}

task copyPropertiesRelease(type: Copy, dependsOn: "injectProperties") {
    from '../gradle.properties'
    into 'src/main/assets'
}

task injectProperties() {
    def propertiesFile = file('../gradle.properties')

    def patternVersionPatch = Pattern.compile("versionPatch=.*")
    def propertiesText = propertiesFile.getText()
    def matcherVersionPatch = patternVersionPatch.matcher(propertiesText)
    matcherVersionPatch.find()
    def propertiesContent = matcherVersionPatch.replaceAll("versionPatch=" + versionPatch)
    propertiesFile.write(propertiesContent)
}

assembleDebug.dependsOn(copyPropertiesDebug)
assembleRelease.dependsOn(copyPropertiesRelease)

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:design:23.1.0'
    compile 'com.facebook.android:facebook-android-sdk:4.7.0'
    compile 'com.google.code.gson:gson:2.3.1'
}
